{
  "hash": "d53db09a2f9e3e7fa4fe6d1ffa516b9b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Datenmanagement und deskriptive Statistik\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Beispieldatensatz potato.xlsx {#sec-pot}\n\nDiese Daten sind die leicht modifizierten und erweiterten `greenhouse`-Daten aus dem R-Paket `agricolae`.\n\nIn einem Versuch wurden verschiedene Kartoffelsorten (`variety`) in verschiedenen Anbaumethoden (`method`) kultiviert und die Anzahl Knollen (`tubers`), deren Gewicht (`weight`), der Krankheitsbefall (`infection` 1=ja, 0=nein) und die mittlere Luftfeuchte (`humidity`) ermittelt.\n\nZunächst lesen wir den Datensatz [potato.xlsx](https://github.com/DoreenGabriel/Kurs/blob/main/Themen/02/potato.xlsx){target=\"_blank\"}  mit der Funktion `read.xlsx` aus der `library(openxlsx)` ein und benennen den `data.frame` mit `pot` und machen uns mit ihm vertraut.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\npot<-read.xlsx(\"potato.xlsx\", sheet=1)\nstr(pot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t478 obs. of  7 variables:\n $ variety  : chr  \"Unica\" \"Unica\" \"Unica\" \"Unica\" ...\n $ method   : chr  \"pot\" \"pot\" \"pot\" \"pot\" ...\n $ plant    : num  1 2 3 4 5 6 7 8 9 10 ...\n $ tubers   : num  9 3 4 4 2 2 3 6 9 6 ...\n $ weight   : num  209.9 248.4 53.6 77.2 11.3 ...\n $ infection: num  0 0 0 0 1 0 0 0 0 0 ...\n $ humidity : num  26.1 30.2 52.5 34 49.6 ...\n```\n\n\n:::\n:::\n\n\n\n\nDer Datensatz hat 478 Zeilen (Beobachtungen) und 7 Spalten.\n\n`variety` und`method` sind als *character* eingelesen.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(pot$variety)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Unica\"     \"Mariva\"    \"Costanera\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(pot$method)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"pot\"        \"bed\"        \"hydroponic\" \"aeroponic\" \n```\n\n\n:::\n:::\n\n\n\n\nDiese können wir auch in Faktoren umwandeln (siehe @sec-mutate). Alle anderen Variablen sind numerisch.\n\n# Datenmanagement mit dplyr\n\nEine gute Hilfestellung für `dplyr` findet ihr unter:\\\n[https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html](https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html){target=\"_blank\"}\n\nWir laden zunächst das Paket `dplyr` ein.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n\n\n\nUm den Output der folgenden Beispiele übersichtlicher zu gestalten, erstelle ich ein Subset aus dem Datensatz `pot`, der nur 24 Beobachtungen enthält (zwei Beobachtungen für jede Kombination aus Sorte und Methode).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\npot.sub=pot%>% \n    group_by(variety, method) %>%\n    slice_sample(n = 2)\nprint(pot.sub, n=24)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic      1      5  24.1          0     33.9\n 2 Costanera aeroponic      5      7  42            0     26.0\n 3 Costanera bed            4      7 137.           1     41.6\n 4 Costanera bed            3      5  78            1     51.0\n 5 Costanera hydroponic     8      6  31.8          1     57.2\n 6 Costanera hydroponic     4      5  42            1     56.8\n 7 Costanera pot            5      3 110.           0     26.6\n 8 Costanera pot            6      7 139.           0     41.6\n 9 Mariva    aeroponic      7      6  99.2          0     31.8\n10 Mariva    aeroponic      5      5  72.6          0     24.5\n11 Mariva    bed            7      5  59.9          0     56.3\n12 Mariva    bed            8      5  77.3          0     16.3\n13 Mariva    hydroponic     9      2  10.8          0     44.6\n14 Mariva    hydroponic     9      1   7.85         0     48.5\n15 Mariva    pot            5      7 104.           0     41.4\n16 Mariva    pot            8      5  64.8          0     27.3\n17 Unica     aeroponic      6      2 112.           0     27.5\n18 Unica     aeroponic      7      4  50.1          0     40.0\n19 Unica     bed            9      4 124.           0     41.8\n20 Unica     bed            9      3  38            0     56.8\n21 Unica     hydroponic     6      2  17.1          0     50.2\n22 Unica     hydroponic     4      2  21.8          0     14.3\n23 Unica     pot            7      4  50.4          0     36.0\n24 Unica     pot            9      5  97.7          1     58.7\n```\n\n\n:::\n:::\n\n\n\n\n## Zeilen\n\nWir lernen nun Funtionen aus dem paket `dplyr` kennen, mit denen wir Beobachtungen, d.h. Zeilen unseres Datensatzes, auswählen oder umsortieren können.\n\n### filter\n\nMit der Funktion `filter` können wir ein Subset des Datensatzes erstellen. `pot.M` enthält mit folgendem Code nur noch Beobachtungen der Sorte `Mariva`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.M<- pot.sub %>% filter(variety==\"Mariva\")\npot.M\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 7\n# Groups:   variety, method [4]\n  variety method     plant tubers weight infection humidity\n  <chr>   <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n1 Mariva  aeroponic      7      6  99.2          0     31.8\n2 Mariva  aeroponic      5      5  72.6          0     24.5\n3 Mariva  bed            7      5  59.9          0     56.3\n4 Mariva  bed            8      5  77.3          0     16.3\n5 Mariva  hydroponic     9      2  10.8          0     44.6\n6 Mariva  hydroponic     9      1   7.85         0     48.5\n7 Mariva  pot            5      7 104.           0     41.4\n8 Mariva  pot            8      5  64.8          0     27.3\n```\n\n\n:::\n:::\n\n\n\n\n`pot.BM` enthält mit folgendem Code nur noch Beobachtungen der Sorte `Mariva` und Methode `bed`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.MB<- pot.sub %>% filter(variety==\"Mariva\", method==\"bed\")\npot.MB  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n# Groups:   variety, method [1]\n  variety method plant tubers weight infection humidity\n  <chr>   <chr>  <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n1 Mariva  bed        7      5   59.9         0     56.3\n2 Mariva  bed        8      5   77.3         0     16.3\n```\n\n\n:::\n:::\n\n\n\n\nMehrere Ausprägungen einer Variable können mit `%in%` ausgewählt werden: `pot.MU` enthält mit folgendem Code nur noch Beobachtungen der Sorten `Mariva` und `Unica`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.MU<- pot.sub %>% filter(variety%in%c(\"Mariva\", \"Unica\"))\npot.MU\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 7\n# Groups:   variety, method [8]\n   variety method     plant tubers weight infection humidity\n   <chr>   <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Mariva  aeroponic      7      6  99.2          0     31.8\n 2 Mariva  aeroponic      5      5  72.6          0     24.5\n 3 Mariva  bed            7      5  59.9          0     56.3\n 4 Mariva  bed            8      5  77.3          0     16.3\n 5 Mariva  hydroponic     9      2  10.8          0     44.6\n 6 Mariva  hydroponic     9      1   7.85         0     48.5\n 7 Mariva  pot            5      7 104.           0     41.4\n 8 Mariva  pot            8      5  64.8          0     27.3\n 9 Unica   aeroponic      6      2 112.           0     27.5\n10 Unica   aeroponic      7      4  50.1          0     40.0\n11 Unica   bed            9      4 124.           0     41.8\n12 Unica   bed            9      3  38            0     56.8\n13 Unica   hydroponic     6      2  17.1          0     50.2\n14 Unica   hydroponic     4      2  21.8          0     14.3\n15 Unica   pot            7      4  50.4          0     36.0\n16 Unica   pot            9      5  97.7          1     58.7\n```\n\n\n:::\n:::\n\n\n\n\nAlternativ können alle Beobachtungen bis auf Sorte `Mariva` selektiert werden.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.oM<- pot.sub %>% filter(variety!=(\"Mariva\"))\npot.oM \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 7\n# Groups:   variety, method [8]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic      1      5   24.1         0     33.9\n 2 Costanera aeroponic      5      7   42           0     26.0\n 3 Costanera bed            4      7  137.          1     41.6\n 4 Costanera bed            3      5   78           1     51.0\n 5 Costanera hydroponic     8      6   31.8         1     57.2\n 6 Costanera hydroponic     4      5   42           1     56.8\n 7 Costanera pot            5      3  110.          0     26.6\n 8 Costanera pot            6      7  139.          0     41.6\n 9 Unica     aeroponic      6      2  112.          0     27.5\n10 Unica     aeroponic      7      4   50.1         0     40.0\n11 Unica     bed            9      4  124.          0     41.8\n12 Unica     bed            9      3   38           0     56.8\n13 Unica     hydroponic     6      2   17.1         0     50.2\n14 Unica     hydroponic     4      2   21.8         0     14.3\n15 Unica     pot            7      4   50.4         0     36.0\n16 Unica     pot            9      5   97.7         1     58.7\n```\n\n\n:::\n:::\n\n\n\n\nHier werden alle Beobachtungen mit größer gleich 5 Knollen selektiert.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.T5 <-pot.sub %>% filter(tubers>=5)\npot.T5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 7\n# Groups:   variety, method [8]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic      1      5   24.1         0     33.9\n 2 Costanera aeroponic      5      7   42           0     26.0\n 3 Costanera bed            4      7  137.          1     41.6\n 4 Costanera bed            3      5   78           1     51.0\n 5 Costanera hydroponic     8      6   31.8         1     57.2\n 6 Costanera hydroponic     4      5   42           1     56.8\n 7 Costanera pot            6      7  139.          0     41.6\n 8 Mariva    aeroponic      7      6   99.2         0     31.8\n 9 Mariva    aeroponic      5      5   72.6         0     24.5\n10 Mariva    bed            7      5   59.9         0     56.3\n11 Mariva    bed            8      5   77.3         0     16.3\n12 Mariva    pot            5      7  104.          0     41.4\n13 Mariva    pot            8      5   64.8         0     27.3\n14 Unica     pot            9      5   97.7         1     58.7\n```\n\n\n:::\n\n```{.r .cell-code}\npot.T5$tubers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 5 7 7 5 6 5 7 6 5 5 5 7 5 5\n```\n\n\n:::\n:::\n\n\n\n\nHier werden alle Beobachtungen mit mehr als 5 Knollen selektiert.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.T5 <-pot.sub %>% filter(tubers>5)\npot.T5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n# Groups:   variety, method [6]\n  variety   method     plant tubers weight infection humidity\n  <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n1 Costanera aeroponic      5      7   42           0     26.0\n2 Costanera bed            4      7  137.          1     41.6\n3 Costanera hydroponic     8      6   31.8         1     57.2\n4 Costanera pot            6      7  139.          0     41.6\n5 Mariva    aeroponic      7      6   99.2         0     31.8\n6 Mariva    pot            5      7  104.          0     41.4\n```\n\n\n:::\n\n```{.r .cell-code}\npot.T5$tubers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7 7 6 7 6 7\n```\n\n\n:::\n:::\n\n\n\n\nzwei Bedingungen (Anzahl Knollen und Gewicht)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% filter(tubers>=5, weight > 80)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n# Groups:   variety, method [5]\n  variety   method    plant tubers weight infection humidity\n  <chr>     <chr>     <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n1 Costanera bed           4      7  137.          1     41.6\n2 Costanera pot           6      7  139.          0     41.6\n3 Mariva    aeroponic     7      6   99.2         0     31.8\n4 Mariva    pot           5      7  104.          0     41.4\n5 Unica     pot           9      5   97.7         1     58.7\n```\n\n\n:::\n:::\n\n\n\n\n### arrange\n\nMit der Funktion `arrange` sortieren wir die Daten. Hier nach Anzahl `tubers` in aufsteigender Reihenfolge.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% arrange(tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Mariva    hydroponic     9      1   7.85         0     48.5\n 2 Mariva    hydroponic     9      2  10.8          0     44.6\n 3 Unica     aeroponic      6      2 112.           0     27.5\n 4 Unica     hydroponic     6      2  17.1          0     50.2\n 5 Unica     hydroponic     4      2  21.8          0     14.3\n 6 Costanera pot            5      3 110.           0     26.6\n 7 Unica     bed            9      3  38            0     56.8\n 8 Unica     aeroponic      7      4  50.1          0     40.0\n 9 Unica     bed            9      4 124.           0     41.8\n10 Unica     pot            7      4  50.4          0     36.0\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\nund hier in absteigender Reihenfolge durch Funktion `desc()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% arrange(desc(tubers))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic      5      7   42           0     26.0\n 2 Costanera bed            4      7  137.          1     41.6\n 3 Costanera pot            6      7  139.          0     41.6\n 4 Mariva    pot            5      7  104.          0     41.4\n 5 Costanera hydroponic     8      6   31.8         1     57.2\n 6 Mariva    aeroponic      7      6   99.2         0     31.8\n 7 Costanera aeroponic      1      5   24.1         0     33.9\n 8 Costanera bed            3      5   78           1     51.0\n 9 Costanera hydroponic     4      5   42           1     56.8\n10 Mariva    aeroponic      5      5   72.6         0     24.5\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\nund hier für zwei Kriterien (wobei letzteres Kriterium nur bei gleichen Werten in erstem Kriterium sortiert wird)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% arrange(desc(tubers),desc(weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera pot            6      7  139.          0     41.6\n 2 Costanera bed            4      7  137.          1     41.6\n 3 Mariva    pot            5      7  104.          0     41.4\n 4 Costanera aeroponic      5      7   42           0     26.0\n 5 Mariva    aeroponic      7      6   99.2         0     31.8\n 6 Costanera hydroponic     8      6   31.8         1     57.2\n 7 Unica     pot            9      5   97.7         1     58.7\n 8 Costanera bed            3      5   78           1     51.0\n 9 Mariva    bed            8      5   77.3         0     16.3\n10 Mariva    aeroponic      5      5   72.6         0     24.5\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### slice\n\nMit der Funktion `slice` selektieren wir die Zeilen. Hier Zeile 5 bis 10 im Datensatz `pot`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% slice(5:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  variety method plant tubers weight infection humidity\n1   Unica    pot     5      2   11.3         1 49.62655\n2   Unica    pot     6      2   17.8         0 54.42449\n3   Unica    pot     7      3   28.1         0 38.82654\n4   Unica    pot     8      6   33.0         0 17.36043\n5   Unica    pot     9      9   81.5         0 24.55165\n6   Unica    pot    10      6   71.1         0 27.55136\n```\n\n\n:::\n:::\n\n\n\n\nDie Funktion `slice_head(n=3)` zeigt die ersten drei Zeilen des Datensatzes an.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% slice_head(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  variety method plant tubers weight infection humidity\n1   Unica    pot     1      9  209.9         0 26.12342\n2   Unica    pot     2      3  248.4         0 30.23136\n3   Unica    pot     3      4   53.6         0 52.47987\n```\n\n\n:::\n:::\n\n\n\n\nDie Funktion `slice_tail(n=3)` zeigt die letzten drei Zeilen des Datensatzes an.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% slice_tail(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    variety    method plant tubers weight infection humidity\n1 Costanera aeroponic     8      6   29.1         1 49.90505\n2 Costanera aeroponic     9      4   17.6         0 54.39016\n3 Costanera aeroponic    10      7   36.9         0 29.03782\n```\n\n\n:::\n:::\n\n\n\n\nAlternativ könnte man auch die Funtionen `head(pot)` und `tail(pot)` nutzen.\n\nDie Funktion `slice_sample(n=3)` wählt zufällig drei Beobachtungen aus.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% slice_sample(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    variety     method plant tubers weight infection humidity\n1     Unica        bed     3      2   18.2         1 42.24794\n2 Costanera        bed     2      4  118.5         1 33.23794\n3     Unica hydroponic     3      2   58.7         0 13.54122\n```\n\n\n:::\n:::\n\n\n\n\nWenn man immer das gleiche Set an Proben zufällig auswählen möchte, d.h. ein reproduzierbares Ergebnis erzielen möchte, dann setzt man vorher den `seed`. Die Zahl (hier 123) kann beliebig gewählt werden.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\npot %>% slice_sample(n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    variety     method plant tubers weight infection humidity\n1    Mariva        bed     5      3   37.8         1 42.87366\n2 Costanera hydroponic     3      7   18.6         1 54.46725\n3    Mariva        bed     9      6   99.4         0 38.52317\n```\n\n\n:::\n:::\n\n\n\n\nDie Funktion `slice_max(n=3)` wählt die drei Beobachtungen mit dem höchsten Gewicht aus.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% slice_max(weight, n=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  variety    method plant tubers weight infection humidity\n1  Mariva aeroponic     6     13  323.3         0 45.84920\n2   Unica aeroponic     9      5  265.4         0 17.41489\n3   Unica       pot     2      3  248.4         0 30.23136\n```\n\n\n:::\n:::\n\n\n\n\n## Spalten\n\nHäufig arbeitet man mit großen Datensätzen und vielen Variablen.\n\n### select\n\nMit der Funktion `select` kann man Variablen auswählen, indem ich sie durch Komme getrennt aufliste:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% select(variety, method, tubers, weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 4\n# Groups:   variety, method [12]\n   variety   method     tubers weight\n   <chr>     <chr>       <dbl>  <dbl>\n 1 Costanera aeroponic       5   24.1\n 2 Costanera aeroponic       7   42  \n 3 Costanera bed             7  137. \n 4 Costanera bed             5   78  \n 5 Costanera hydroponic      6   31.8\n 6 Costanera hydroponic      5   42  \n 7 Costanera pot             3  110. \n 8 Costanera pot             7  139. \n 9 Mariva    aeroponic       6   99.2\n10 Mariva    aeroponic       5   72.6\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\noder von `variety` bis `weight`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% select(variety:weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 5\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>\n 1 Costanera aeroponic      1      5   24.1\n 2 Costanera aeroponic      5      7   42  \n 3 Costanera bed            4      7  137. \n 4 Costanera bed            3      5   78  \n 5 Costanera hydroponic     8      6   31.8\n 6 Costanera hydroponic     4      5   42  \n 7 Costanera pot            5      3  110. \n 8 Costanera pot            6      7  139. \n 9 Mariva    aeroponic      7      6   99.2\n10 Mariva    aeroponic      5      5   72.6\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\nwie oben nur ohne `plant`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% \n  select(variety:weight)%>% \n  select(-plant)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 4\n# Groups:   variety, method [12]\n   variety   method     tubers weight\n   <chr>     <chr>       <dbl>  <dbl>\n 1 Costanera aeroponic       5   24.1\n 2 Costanera aeroponic       7   42  \n 3 Costanera bed             7  137. \n 4 Costanera bed             5   78  \n 5 Costanera hydroponic      6   31.8\n 6 Costanera hydroponic      5   42  \n 7 Costanera pot             3  110. \n 8 Costanera pot             7  139. \n 9 Mariva    aeroponic       6   99.2\n10 Mariva    aeroponic       5   72.6\n# ℹ 14 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# oder so\npot.sub %>% \n  select(c(variety:weight,-plant))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 4\n# Groups:   variety, method [12]\n   variety   method     tubers weight\n   <chr>     <chr>       <dbl>  <dbl>\n 1 Costanera aeroponic       5   24.1\n 2 Costanera aeroponic       7   42  \n 3 Costanera bed             7  137. \n 4 Costanera bed             5   78  \n 5 Costanera hydroponic      6   31.8\n 6 Costanera hydroponic      5   42  \n 7 Costanera pot             3  110. \n 8 Costanera pot             7  139. \n 9 Mariva    aeroponic       6   99.2\n10 Mariva    aeroponic       5   72.6\n# ℹ 14 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# aber nicht so\npot.sub %>% \n  select(c(-plant, variety:weight))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     tubers weight infection humidity plant\n   <chr>     <chr>       <dbl>  <dbl>     <dbl>    <dbl> <dbl>\n 1 Costanera aeroponic       5   24.1         0     33.9     1\n 2 Costanera aeroponic       7   42           0     26.0     5\n 3 Costanera bed             7  137.          1     41.6     4\n 4 Costanera bed             5   78           1     51.0     3\n 5 Costanera hydroponic      6   31.8         1     57.2     8\n 6 Costanera hydroponic      5   42           1     56.8     4\n 7 Costanera pot             3  110.          0     26.6     5\n 8 Costanera pot             7  139.          0     41.6     6\n 9 Mariva    aeroponic       6   99.2         0     31.8     7\n10 Mariva    aeroponic       5   72.6         0     24.5     5\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% \n  select(ends_with(\"t\")) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAdding missing grouping variables: `variety`, `method`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 4\n# Groups:   variety, method [12]\n   variety   method     plant weight\n   <chr>     <chr>      <dbl>  <dbl>\n 1 Costanera aeroponic      1   24.1\n 2 Costanera aeroponic      5   42  \n 3 Costanera bed            4  137. \n 4 Costanera bed            3   78  \n 5 Costanera hydroponic     8   31.8\n 6 Costanera hydroponic     4   42  \n 7 Costanera pot            5  110. \n 8 Costanera pot            6  139. \n 9 Mariva    aeroponic      7   99.2\n10 Mariva    aeroponic      5   72.6\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% \n  select(ends_with(\"t\")) %>% \n  slice_sample(n=8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  plant weight\n1     4  65.60\n2     5  78.30\n3     6  10.35\n4     6  14.15\n5     8  43.30\n6     9  34.10\n7     9  16.70\n8     4 142.80\n```\n\n\n:::\n:::\n\n\n\n\n### rename\n\nVariablen können umbenannt werden durch die Funktion `rename()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% rename(plant_ID=plant)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant_ID tubers weight infection humidity\n   <chr>     <chr>         <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic         1      5   24.1         0     33.9\n 2 Costanera aeroponic         5      7   42           0     26.0\n 3 Costanera bed               4      7  137.          1     41.6\n 4 Costanera bed               3      5   78           1     51.0\n 5 Costanera hydroponic        8      6   31.8         1     57.2\n 6 Costanera hydroponic        4      5   42           1     56.8\n 7 Costanera pot               5      3  110.          0     26.6\n 8 Costanera pot               6      7  139.          0     41.6\n 9 Mariva    aeroponic         7      6   99.2         0     31.8\n10 Mariva    aeroponic         5      5   72.6         0     24.5\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight infection humidity\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic      1      5   24.1         0     33.9\n 2 Costanera aeroponic      5      7   42           0     26.0\n 3 Costanera bed            4      7  137.          1     41.6\n 4 Costanera bed            3      5   78           1     51.0\n 5 Costanera hydroponic     8      6   31.8         1     57.2\n 6 Costanera hydroponic     4      5   42           1     56.8\n 7 Costanera pot            5      3  110.          0     26.6\n 8 Costanera pot            6      7  139.          0     41.6\n 9 Mariva    aeroponic      7      6   99.2         0     31.8\n10 Mariva    aeroponic      5      5   72.6         0     24.5\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\nAuch hier müssen wir die Daten in einem neuen `data.frame pot.sub1` speichern oder überschreiben (`pot.sub=pot.sub %>% rename(plant_ID=plant)`), um auf die neue Variable zugreifen zu können.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub1=pot.sub %>% rename(plant_ID=plant)\npot.sub1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 7\n# Groups:   variety, method [12]\n   variety   method     plant_ID tubers weight infection humidity\n   <chr>     <chr>         <dbl>  <dbl>  <dbl>     <dbl>    <dbl>\n 1 Costanera aeroponic         1      5   24.1         0     33.9\n 2 Costanera aeroponic         5      7   42           0     26.0\n 3 Costanera bed               4      7  137.          1     41.6\n 4 Costanera bed               3      5   78           1     51.0\n 5 Costanera hydroponic        8      6   31.8         1     57.2\n 6 Costanera hydroponic        4      5   42           1     56.8\n 7 Costanera pot               5      3  110.          0     26.6\n 8 Costanera pot               6      7  139.          0     41.6\n 9 Mariva    aeroponic         7      6   99.2         0     31.8\n10 Mariva    aeroponic         5      5   72.6         0     24.5\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### mutate\n\nEine neue Variable kann durch die Funktion `mutate` berechnet und eingefügt werden.\n\nBeispielsweise könnten wir das Gewicht in kg statt g angeben. Es wird eine neue Variable erzeugt `weight_kg` indem `weight` durch 1000 geteilt wird.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub %>% \n  mutate(weight_kg=weight/1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 8\n# Groups:   variety, method [12]\n   variety   method     plant tubers weight infection humidity weight_kg\n   <chr>     <chr>      <dbl>  <dbl>  <dbl>     <dbl>    <dbl>     <dbl>\n 1 Costanera aeroponic      1      5   24.1         0     33.9    0.0241\n 2 Costanera aeroponic      5      7   42           0     26.0    0.042 \n 3 Costanera bed            4      7  137.          1     41.6    0.137 \n 4 Costanera bed            3      5   78           1     51.0    0.078 \n 5 Costanera hydroponic     8      6   31.8         1     57.2    0.0318\n 6 Costanera hydroponic     4      5   42           1     56.8    0.042 \n 7 Costanera pot            5      3  110.          0     26.6    0.110 \n 8 Costanera pot            6      7  139.          0     41.6    0.139 \n 9 Mariva    aeroponic      7      6   99.2         0     31.8    0.0992\n10 Mariva    aeroponic      5      5   72.6         0     24.5    0.0726\n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n\n\nDamit diese neue Variable im Datensatz nicht nur erscheint, sondern auch zugreifbar ist, speichere ich den Datensatz unter einem neuen Namen ab. Man könnte ihn auch überschreiben. Ausserdem noch zwei Beispiele für eine log- und Wurzel-Transformation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot.sub1=pot.sub %>% \n  mutate(weight_kg=weight/1000,\n         weight.sqrt=sqrt(weight),\n         weight.l=log(weight),\n         tubers.l=log(tubers))\npot.sub1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 11\n# Groups:   variety, method [12]\n   variety   method plant tubers weight infection humidity weight_kg weight.sqrt\n   <chr>     <chr>  <dbl>  <dbl>  <dbl>     <dbl>    <dbl>     <dbl>       <dbl>\n 1 Costanera aerop…     1      5   24.1         0     33.9    0.0241        4.91\n 2 Costanera aerop…     5      7   42           0     26.0    0.042         6.48\n 3 Costanera bed        4      7  137.          1     41.6    0.137        11.7 \n 4 Costanera bed        3      5   78           1     51.0    0.078         8.83\n 5 Costanera hydro…     8      6   31.8         1     57.2    0.0318        5.64\n 6 Costanera hydro…     4      5   42           1     56.8    0.042         6.48\n 7 Costanera pot        5      3  110.          0     26.6    0.110        10.5 \n 8 Costanera pot        6      7  139.          0     41.6    0.139        11.8 \n 9 Mariva    aerop…     7      6   99.2         0     31.8    0.0992        9.96\n10 Mariva    aerop…     5      5   72.6         0     24.5    0.0726        8.52\n# ℹ 14 more rows\n# ℹ 2 more variables: weight.l <dbl>, tubers.l <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n#### Variable in Faktor umwandeln {#sec-mutate}\n\nBeim Importieren von Daten werden Variablen häufig als `character` eingelesen (oder als `numeric`), die für die spätere Analyse aber als Faktor benötigt werden. Wir können diese Variablen in Faktoren umwandeln, können diese überschreiben oder (wie unten gezeigt) geben ihnen einen neuen Namen mit dem Appendix \".f\".\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot=pot %>% \n    mutate(variety.f=as.factor(variety),\n           method.f=as.factor(method),\n           infection.f=as.factor(infection))\n```\n:::\n\n\n\n\nalternativer Code zu oben:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot$variety.f=as.factor(pot$variety)\npot$method.f=as.factor(pot$method)\npot$infection.f=as.factor(pot$infection)\nstr(pot)\n```\n:::\n\n\n\n\nMit `across(where(is.character),as.factor)` werden alle Variablen, die als Charakter eingelesen sind, in einen Faktor umgewandelt.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot2<-read.xlsx(\"potato.xlsx\", sheet=1)\nstr(pot2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t478 obs. of  7 variables:\n $ variety  : chr  \"Unica\" \"Unica\" \"Unica\" \"Unica\" ...\n $ method   : chr  \"pot\" \"pot\" \"pot\" \"pot\" ...\n $ plant    : num  1 2 3 4 5 6 7 8 9 10 ...\n $ tubers   : num  9 3 4 4 2 2 3 6 9 6 ...\n $ weight   : num  209.9 248.4 53.6 77.2 11.3 ...\n $ infection: num  0 0 0 0 1 0 0 0 0 0 ...\n $ humidity : num  26.1 30.2 52.5 34 49.6 ...\n```\n\n\n:::\n\n```{.r .cell-code}\npot3<- pot2 %>% mutate(across(where(is.character),as.factor))\nstr(pot3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t478 obs. of  7 variables:\n $ variety  : Factor w/ 3 levels \"Costanera\",\"Mariva\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ method   : Factor w/ 4 levels \"aeroponic\",\"bed\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ plant    : num  1 2 3 4 5 6 7 8 9 10 ...\n $ tubers   : num  9 3 4 4 2 2 3 6 9 6 ...\n $ weight   : num  209.9 248.4 53.6 77.2 11.3 ...\n $ infection: num  0 0 0 0 1 0 0 0 0 0 ...\n $ humidity : num  26.1 30.2 52.5 34 49.6 ...\n```\n\n\n:::\n:::\n\n\n\n\nBitte beachten, dass `infection` damit nicht als Faktor umgewandelt wird, da es als numerische Variable eingelesen wurde. Wir müssen also immer nochmal die Struktur überprüfen und ggfls. nachjustieren.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot4<- pot2 %>% mutate(across(where(is.character),as.factor),\n                       infection=as.factor(infection))\nstr(pot4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t478 obs. of  7 variables:\n $ variety  : Factor w/ 3 levels \"Costanera\",\"Mariva\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ method   : Factor w/ 4 levels \"aeroponic\",\"bed\",..: 4 4 4 4 4 4 4 4 4 4 ...\n $ plant    : num  1 2 3 4 5 6 7 8 9 10 ...\n $ tubers   : num  9 3 4 4 2 2 3 6 9 6 ...\n $ weight   : num  209.9 248.4 53.6 77.2 11.3 ...\n $ infection: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 2 1 1 1 1 1 ...\n $ humidity : num  26.1 30.2 52.5 34 49.6 ...\n```\n\n\n:::\n:::\n\n\n\n\nDer große Vorteil von `dplyr` ist, dass ihr alle Schritte in einen Code schreiben und ihn damit gut nachvollziehen könnt.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot1=pot%>% \n  filter(variety==c(\"Mariva\", \"Costanera\"), tubers>7) %>% \n  mutate(weight_kg=weight/1000, \n         variety.f=as.factor(variety),\n         method.f=as.factor(method),\n         infection.f=as.factor(infection)) %>% \n  select(!c(plant,infection, weight))\npot1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     variety     method tubers humidity variety.f   method.f infection.f\n1     Mariva        bed      9 36.24464    Mariva        bed           0\n2     Mariva        bed     10 13.83214    Mariva        bed           0\n3     Mariva        bed      8 34.63448    Mariva        bed           0\n4  Costanera        pot      8 62.30639 Costanera        pot           1\n5  Costanera hydroponic      8 51.21347 Costanera hydroponic           1\n6  Costanera  aeroponic      9 40.65539 Costanera  aeroponic           0\n7     Mariva        pot     10 27.90961    Mariva        pot           0\n8     Mariva  aeroponic      8 55.48964    Mariva  aeroponic           1\n9  Costanera        pot      8 27.17098 Costanera        pot           0\n10 Costanera        pot      9 25.69880 Costanera        pot           0\n11    Mariva        bed     11 47.62537    Mariva        bed           0\n12    Mariva        bed      8 62.26231    Mariva        bed           1\n13    Mariva  aeroponic     10 28.71567    Mariva  aeroponic           0\n14    Mariva  aeroponic      8 54.04355    Mariva  aeroponic           0\n15    Mariva        pot     10 26.39289    Mariva        pot           0\n16    Mariva        bed     10 54.14047    Mariva        bed           1\n17    Mariva        bed      8 56.14320    Mariva        bed           1\n18    Mariva        bed     10 39.75289    Mariva        bed           0\n19    Mariva  aeroponic      9 30.72462    Mariva  aeroponic           0\n20    Mariva  aeroponic      8 36.82570    Mariva  aeroponic           0\n21 Costanera        pot      8 44.07980 Costanera        pot           0\n22 Costanera        bed      8 61.03558 Costanera        bed           1\n23 Costanera hydroponic      8 69.46336 Costanera hydroponic           1\n   weight_kg\n1     0.2274\n2     0.0338\n3     0.0948\n4     0.1624\n5     0.0486\n6     0.0781\n7     0.0773\n8     0.1205\n9     0.1449\n10    0.1391\n11    0.1182\n12    0.1250\n13    0.1883\n14    0.1656\n15    0.0644\n16    0.1069\n17    0.1332\n18    0.1183\n19    0.0759\n20    0.1684\n21    0.1531\n22    0.0494\n23    0.0253\n```\n\n\n:::\n:::\n\n\n\n\n## Übung 2.1.\n\nDie Körpergröße, Schuhgröße, Geschlecht und Augenfarbe von Kursteilnehmer wurde ermittelt. Importiere bitte die Daten [Kursteilnehmer.xlsx](https://github.com/DoreenGabriel/Kurs/blob/main/Themen/02/Kursteilnehmer.xlsx){target=\"_blank\"} in R  und benenne den data.frame mit `md`. \n\n::: {.callout-tip collapse=\"true\"}\n### Daten einlesen und prüfen\nDer Datensatz hat in der ersten Zeile eine detaillierte und in der zweiter Zeile die kurze Variablenbezeichnung. Daher lese ich die Daten mit dem Argument `startRow = 2` erst ab der zweiten Zeile ein. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nmd<-read.xlsx(\"Kursteilnehmer.xlsx\", sheet=1, startRow = 2)\nstr(md)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t72 obs. of  5 variables:\n $ Name: chr  \"Colton\" \"Kyle\" \"Brandon\" \"Cory\" ...\n $ KG  : num  181 183 186 184 172 186 183 197 180 184 ...\n $ SG  : num  42 44 42 45 43 43 42 45 43 43 ...\n $ AF  : chr  \"braun\" \"braun\" \"braun\" \"blau\" ...\n $ G   : chr  \"m\" \"m\" \"m\" \"m\" ...\n```\n\n\n:::\n:::\n\n\n\n:::\n\nErstelle einen neuen Datensatz mit Beobachtungen von Kursteilnehmern mit jeweils: \n\n+ blauen Augen (`md1`)\n\n\n\n::: {.callout-tip collapse=\"true\"}\n \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nmd1 = md %>% filter(AF==\"blau\")\nmd1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Name  KG SG   AF G\n1        Cory 184 45 blau m\n2       Heath 172 43 blau m\n3       Jesse 186 43 blau m\n4       David 180 43 blau m\n5     Brandon 189 48 blau m\n6        Luke 177 44 blau m\n7        Cole 180 43 blau m\n8       Lance 173 40 blau m\n9     Braxton 180 44 blau m\n10       Noah 200 45 blau m\n11       Mark 183 43 blau m\n12     George 178 44 blau m\n13     Camron 183 44 blau m\n14   Benjamin 192 43 blau m\n15       Drew 178 41 blau m\n16       Kyle 173 42 blau m\n17    Janelle 167 39 blau w\n18    Kathryn 170 37 blau w\n19     Jordan 150 36 blau w\n20      Kiana 152 35 blau w\n21  Kimberlyn 164 40 blau w\n22      Janie 167 39 blau w\n23     Kelsey 164 38 blau w\n24    Kellcie 180 39 blau w\n25     Maggie 168 38 blau w\n26    Cassidy 157 38 blau w\n27 Mattielien 154 38 blau w\n28    Carissa 170 40 blau w\n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ Körpergröße größer 1,70 m (`md2`)\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd2 = md %>% filter(KG>170)\nmd2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Name  KG SG    AF G\n1         Colton 181 42 braun m\n2           Kyle 183 44 braun m\n3        Brandon 186 42 braun m\n4           Cory 184 45  blau m\n5          Heath 172 43  blau m\n6          Jesse 186 43  blau m\n7         Daniel 183 42 braun m\n8         Bradin 197 45 braun m\n9          David 180 43  blau m\n10          Kyle 184 43 braun m\n11       Brandon 189 48  blau m\n12          Luke 177 44  blau m\n13       Cameron 181 43 braun m\n14 Jackson Payne 176 42 braun m\n15          Cole 180 43  blau m\n16         Riley 184 44 gruen m\n17         Lance 173 40  blau m\n18         Nakai 178 43 braun m\n19       Garrett 182 43 braun m\n20       Braxton 180 44  blau m\n21          Noah 200 45  blau m\n22        Brolon 178 44 braun m\n23          Mark 183 43  blau m\n24        George 178 44  blau m\n25        Camron 183 44  blau m\n26        Bryson 180 41 braun m\n27      Benjamin 192 43  blau m\n28          Drew 178 41  blau m\n29          Kyle 173 42  blau m\n30         Jacob 178 42 gruen m\n31         Paige 177 40 braun w\n32        Morgan 173 41 gruen w\n33       Kaitlyn 172 38 gruen w\n34       Kellcie 180 39  blau w\n35         Hanna 172 41 braun w\n36         Traci 175 41 braun w\n37        Hannah 176 39 braun w\n38       Felicia 172 40 braun w\n39      Kaytlynn 186 42 braun w\n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ blauen und grünen Augen (`md3`)\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd3 = md %>% filter(AF%in%c(\"blau\", \"gruen\"))\nmd3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Name  KG SG    AF G\n1        Cory 184 45  blau m\n2       Heath 172 43  blau m\n3       Jesse 186 43  blau m\n4       David 180 43  blau m\n5     Brandon 189 48  blau m\n6        Luke 177 44  blau m\n7      Justin 160 38 gruen m\n8        Cole 180 43  blau m\n9       Riley 184 44 gruen m\n10      Lance 173 40  blau m\n11    Braxton 180 44  blau m\n12       Noah 200 45  blau m\n13       Mark 183 43  blau m\n14     George 178 44  blau m\n15     Camron 183 44  blau m\n16   Benjamin 192 43  blau m\n17       Drew 178 41  blau m\n18      Brian 163 42 gruen m\n19       Kyle 173 42  blau m\n20      Jacob 178 42 gruen m\n21    Allison 170 41 gruen w\n22    Janelle 167 39  blau w\n23    Kathryn 170 37  blau w\n24     Jordan 150 36  blau w\n25      Kiana 152 35  blau w\n26  Kimberlyn 164 40  blau w\n27     Morgan 173 41 gruen w\n28      Janie 167 39  blau w\n29     Soraya 170 39 gruen w\n30    Kaitlyn 172 38 gruen w\n31     Kelsey 164 38  blau w\n32   Brynelle 165 37 gruen w\n33    Kellcie 180 39  blau w\n34     Maggie 168 38  blau w\n35    Cassidy 157 38  blau w\n36    Mallory 160 38 gruen w\n37       Erin 160 38 gruen w\n38 Mattielien 154 38  blau w\n39    Carissa 170 40  blau w\n40   Danielle 164 37 gruen w\n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ ohne Schuhgröße (`md4`)\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd4 = md %>% select(-SG)\nmd4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Name  KG    AF G\n1         Colton 181 braun m\n2           Kyle 183 braun m\n3        Brandon 186 braun m\n4           Cory 184  blau m\n5          Heath 172  blau m\n6          Jesse 186  blau m\n7         Daniel 183 braun m\n8         Bradin 197 braun m\n9          David 180  blau m\n10          Kyle 184 braun m\n11       Brandon 189  blau m\n12          Luke 177  blau m\n13       Cameron 181 braun m\n14        Justin 160 gruen m\n15 Jackson Payne 176 braun m\n16          Cole 180  blau m\n17         Riley 184 gruen m\n18         Lance 173  blau m\n19         Nakai 178 braun m\n20       Garrett 182 braun m\n21       Braxton 180  blau m\n22          Noah 200  blau m\n23        Brolon 178 braun m\n24          Mark 183  blau m\n25        George 178  blau m\n26        Camron 183  blau m\n27        Bryson 180 braun m\n28      Benjamin 192  blau m\n29          Drew 178  blau m\n30         Brian 163 gruen m\n31          Kyle 173  blau m\n32         Jacob 178 gruen m\n33         Paige 177 braun w\n34       Allison 170 gruen w\n35       Janelle 167  blau w\n36        Ashlie 163 braun w\n37       Kathryn 170  blau w\n38        Jordan 150  blau w\n39         Kiana 152  blau w\n40     Kimberlyn 164  blau w\n41         Sydne 165 braun w\n42       Jessica 170 braun w\n43        Morgan 173 gruen w\n44         Janie 167  blau w\n45        Soraya 170 gruen w\n46         Grace 168 braun w\n47      Danielle 167 braun w\n48     Elizabeth 163 braun w\n49       Kaitlyn 172 gruen w\n50      Bethanie 167 braun w\n51        Kelsey 164  blau w\n52         Dixie 170 braun w\n53      Brynelle 165 gruen w\n54       Andreah 162 braun w\n55      Ashleigh 170 braun w\n56       Kellcie 180  blau w\n57        Maggie 168  blau w\n58       Cassidy 157  blau w\n59       Mallory 160 gruen w\n60       Lindsay 168 braun w\n61          Erin 162 braun w\n62          Erin 160 gruen w\n63         Hanna 172 braun w\n64         Traci 175 braun w\n65        Hannah 176 braun w\n66    Mattielien 154  blau w\n67       Felicia 172 braun w\n68       Carissa 170  blau w\n69      Danielle 164 gruen w\n70      Kaytlynn 186 braun w\n71        Lauren 168 braun w\n72        Jenine 168 braun w\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\nEnde Übung 2.1.\n\n# Deskriptive Statistik\n\n-   Wir unterscheiden zwischen qualitativen (kategorialen) und quantitativen (numerischen) Daten.\n-   Qualitative Daten können weiter differenziert werden in\n    -   nominale Daten (ohne Rangordnung), z.B. Geschlecht (m, w), Blutgruppe, Sorte und Augenfarbe\n    -   ordinale Daten (mit Rangordnung), z.B. Eignung (gut, mittel, schlecht), Platzierung bei einem Rennen, Boniturnoten\n-   Quantitative Daten können weiter unterschieden werden in\n    -   diskrete (ganzzahlig) Daten, z.B. Anzahl Blattläuse, Anzahl Nachkommen\n    -   stetige Daten, z.B. Ertrag, pH-Wert, Körpergröße, Parasitierungsrate\n\n## Qualitative Daten\n\nQualitative Variablen sind in unserem Beispiel die Sorte, der Krankheitsbefall und die Methode. Diese Daten beschreiben wir durch *Häufigkeitstabellen (Kontingenztabellen)*, die angeben, wie häufig eine Merkmalsausprägung bzw. -kombination in unserem Datensatz vorkommt. Wir nutzen die Funktion `count()`aus dem Package `dplyr`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% count(variety)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    variety   n\n1 Costanera 158\n2    Mariva 160\n3     Unica 160\n```\n\n\n:::\n:::\n\n\n\n\noder die Funktion `table()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(pot$variety) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCostanera    Mariva     Unica \n      158       160       160 \n```\n\n\n:::\n:::\n\n\n\n\nDie Funktion `prop.table()` berechnet uns die relativen Anteile jeder Merkmalsausprägung bzw. -kombination.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% count(variety) %>% \n  mutate(prop = prop.table(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    variety   n      prop\n1 Costanera 158 0.3305439\n2    Mariva 160 0.3347280\n3     Unica 160 0.3347280\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(pot$variety)) # relativ, i.e. Anteil der Beobachtungen an der Gesamtzahl der Beobachtungen \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCostanera    Mariva     Unica \n0.3305439 0.3347280 0.3347280 \n```\n\n\n:::\n:::\n\n\n\n\nHäufigkeitstabellen können für 2 Kombinationen (Merkmale) erstellt werden, indem man beide Variablen in der Funktion `count()` oder `table()` angibt.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% count(variety, infection) %>% \n  mutate(prop = prop.table(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    variety infection   n       prop\n1 Costanera         0  77 0.16108787\n2 Costanera         1  81 0.16945607\n3    Mariva         0 119 0.24895397\n4    Mariva         1  41 0.08577406\n5     Unica         0 122 0.25523013\n6     Unica         1  38 0.07949791\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(pot$variety, pot$infection)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           \n              0   1\n  Costanera  77  81\n  Mariva    119  41\n  Unica     122  38\n```\n\n\n:::\n\n```{.r .cell-code}\nprop.table(table(pot$variety, pot$infection)) # relative Häufigkeit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           \n                     0          1\n  Costanera 0.16108787 0.16945607\n  Mariva    0.24895397 0.08577406\n  Unica     0.25523013 0.07949791\n```\n\n\n:::\n:::\n\n\n\n\nHäufigkeitstabelle für 3 Kombinationen\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% count(variety, method, infection) %>% \n  mutate(prop = prop.table(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     variety     method infection  n       prop\n1  Costanera  aeroponic         0 28 0.05857741\n2  Costanera  aeroponic         1 12 0.02510460\n3  Costanera        bed         0  9 0.01882845\n4  Costanera        bed         1 31 0.06485356\n5  Costanera hydroponic         0 11 0.02301255\n6  Costanera hydroponic         1 27 0.05648536\n7  Costanera        pot         0 29 0.06066946\n8  Costanera        pot         1 11 0.02301255\n9     Mariva  aeroponic         0 27 0.05648536\n10    Mariva  aeroponic         1 13 0.02719665\n11    Mariva        bed         0 29 0.06066946\n12    Mariva        bed         1 11 0.02301255\n13    Mariva hydroponic         0 31 0.06485356\n14    Mariva hydroponic         1  9 0.01882845\n15    Mariva        pot         0 32 0.06694561\n16    Mariva        pot         1  8 0.01673640\n17     Unica  aeroponic         0 30 0.06276151\n18     Unica  aeroponic         1 10 0.02092050\n19     Unica        bed         0 31 0.06485356\n20     Unica        bed         1  9 0.01882845\n21     Unica hydroponic         0 32 0.06694561\n22     Unica hydroponic         1  8 0.01673640\n23     Unica        pot         0 29 0.06066946\n24     Unica        pot         1 11 0.02301255\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(pot$variety, pot$method, pot$infection)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n, ,  = 0\n\n           \n            aeroponic bed hydroponic pot\n  Costanera        28   9         11  29\n  Mariva           27  29         31  32\n  Unica            30  31         32  29\n\n, ,  = 1\n\n           \n            aeroponic bed hydroponic pot\n  Costanera        12  31         27  11\n  Mariva           13  11          9   8\n  Unica            10   9          8  11\n```\n\n\n:::\n\n```{.r .cell-code}\nftable(pot$variety, pot$method, pot$infection)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                       0  1\n                           \nCostanera aeroponic   28 12\n          bed          9 31\n          hydroponic  11 27\n          pot         29 11\nMariva    aeroponic   27 13\n          bed         29 11\n          hydroponic  31  9\n          pot         32  8\nUnica     aeroponic   30 10\n          bed         31  9\n          hydroponic  32  8\n          pot         29 11\n```\n\n\n:::\n:::\n\n\n\n\n## Quantitative Daten\n\n### Mittelwert und Median\n-   Arithmetischer Mittelwert `mean()`\n-   Median `median()`: Wert, der an der mittleren (zentralen) Stelle steht, wenn man die Werte der Größe nach sortiert\n-   Median besser als arithmetischer Mittelwert bei:\n    -   ordinalskalierten Beobachtungen\n    -   geringem Stichprobenumfang\n    -   asymmetrischen Verteilungen\n    -   Verdacht auf Ausreißer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% \n  summarise(tubers_avg=mean(tubers))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tubers_avg\n1   4.721757\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% \n  summarise(tubers_avg=mean(tubers),\n            tubers_med=median(tubers))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tubers_avg tubers_med\n1   4.721757          4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.721757\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n\n### Varianz und Standardabweichung \nsind Maße, die die Streuung der Daten beschreiben. \n\n-   Varianz `var()`\n-   Standardabweichung `sd()`\n-   Standardabweichung in gleicher Einheit wie Mittelwert\n-   Wenn Mittelwert und Standardabweichung einer normalverteilten Grundgesamtheit bekannt ist, kann die Wahrscheinlichkeit berechnet werden, mit der ein Wert auftritt.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% \n  summarise(tubers_avg=mean(tubers),\n            tubers_med=median(tubers),\n            tubers_var=var(tubers),\n            tubers_sd=sd(tubers))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tubers_avg tubers_med tubers_var tubers_sd\n1   4.721757          4   5.190763  2.278324\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.190763\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.278324\n```\n\n\n:::\n:::\n\n\n\n\n### Standardfehler des Mittelwertes (sem) \nbeschreibt die Genauigkeit der Berechnung des Stichproben-Mittelwertes.\n\n-   sem = sd/sqrt(n)\n-   `std <- function(x) {sd(x, na.rm=TRUE)/sqrt(length(na.omit(x)))}`\n-   kein Streuungsmaß der Stichprobe\n-   je mehr Datenpunkte, desto genauer die Schätzung des Mittelwertes\n-   Mittelwert ± 1 sem beschreibt den Wertebereich, in dem wir mit 68%iger Wahrscheinlichkeit den wahren Mittelwert erwarten\n-   Mittelwert ± 1,96 sem 95% Wahrscheinlichkeit i.e. Konfidenzintervall\n-   Mittelwert ± 2 sem 95,5%\n-   Mittelwert ± 3 sem 99,7%\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Funktion für den Standardfehler\nstd <- function(x) {sd(x, na.rm=TRUE)/sqrt(length(na.omit(x)))} #muss nur einmal definiert werden\nstd(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1042081\n```\n\n\n:::\n:::\n\n\n\n\n### weitere Maße zur beschreibenden Statistik:\n\n-   Minimum `min()`\n-   Maximum `max()`\n-   Wertebereich `range()`\n-   Quantile `quantile()`\n-   Varianzkoeffizient: CV = sd/mean\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nmax(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13\n```\n\n\n:::\n\n```{.r .cell-code}\nrange(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  0 13\n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(pot$tubers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  0%  25%  50%  75% 100% \n   0    3    4    6   13 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(pot$tubers, p=c(0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.90, 0.95, 0.99))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n 1%  5% 10% 25% 50% 75% 90% 95% 99% \n  0   2   2   3   4   6   8   9  11 \n```\n\n\n:::\n\n```{.r .cell-code}\n#Funktion für Variationskoeffizienten\nCV <- function(x) {sd(x, na.rm=TRUE)/mean(x, na.rm=TRUE)} \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% \n  summarise(tubers_avg=mean(tubers),\n            tubers_med=median(tubers),\n            tubers_var=var(tubers),\n            tubers_sd=sd(tubers),\n            tubers_std=std(tubers),\n            tubers_min=min(tubers),\n            tubers_max=max(tubers),\n            tubers_q25=quantile(tubers, 0.25),\n            tubers_q75=quantile(tubers, 0.75),\n            tubers_CV=CV(tubers))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tubers_avg tubers_med tubers_var tubers_sd tubers_std tubers_min tubers_max\n1   4.721757          4   5.190763  2.278324  0.1042081          0         13\n  tubers_q25 tubers_q75 tubers_CV\n1          3          6 0.4825162\n```\n\n\n:::\n:::\n\n\n\n\n## Anwendungsbeispiele\n\nEine erste einfache Beschreibung der Daten kann mit der Funktion `summary()` erfolgen. Hier sieht man jetzt den Unterschied im Output zwischen variety (als *character*) und variety.f (als *factor*).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(pot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   variety             method              plant           tubers      \n Length:478         Length:478         Min.   : 1.00   Min.   : 0.000  \n Class :character   Class :character   1st Qu.: 3.00   1st Qu.: 3.000  \n Mode  :character   Mode  :character   Median : 5.00   Median : 4.000  \n                                       Mean   : 5.49   Mean   : 4.722  \n                                       3rd Qu.: 8.00   3rd Qu.: 6.000  \n                                       Max.   :10.00   Max.   :13.000  \n     weight         infection         humidity         variety.f  \n Min.   :  0.00   Min.   :0.0000   Min.   : 0.00   Costanera:158  \n 1st Qu.: 26.07   1st Qu.:0.0000   1st Qu.:28.53   Mariva   :160  \n Median : 61.00   Median :0.0000   Median :38.14   Unica    :160  \n Mean   : 72.77   Mean   :0.3347   Mean   :38.40                  \n 3rd Qu.:109.25   3rd Qu.:1.0000   3rd Qu.:48.47                  \n Max.   :323.30   Max.   :1.0000   Max.   :80.00                  \n       method.f   infection.f\n aeroponic :120   0:318      \n bed       :120   1:160      \n hydroponic:118              \n pot       :120              \n                             \n                             \n```\n\n\n:::\n:::\n\n\n\n\nMöchte man eine beschreibende Statistik für jede numerische Variable berechnen, kann die Funktion `summarise_if(is.numeric, mean, na.rm = TRUE)` genutzt werden. Im Beispiel berechnen wir den Mittelwert für alle Variablen im `data.frame pot`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>%\n  summarise_if(is.numeric, mean, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    plant   tubers   weight infection humidity\n1 5.48954 4.721757 72.77259  0.334728 38.39556\n```\n\n\n:::\n:::\n\n\n\n\nHäufig möchte man die beschreibende Statistik für ein oder mehrere Gruppierungslevel berechnen. Bspw. das mittleres Gewicht je Sorte. Wir nutzen hierfür die Funktion `group_by()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% group_by(variety) %>% \n  summarise(weight_avg=mean(weight, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  variety   weight_avg\n  <chr>          <dbl>\n1 Costanera       74.1\n2 Mariva          74.7\n3 Unica           69.6\n```\n\n\n:::\n:::\n\n\n\n\nBsp.: mittleres Gewicht je Sorte und Methode\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% group_by(variety, method) %>% \n  summarise(weight_avg=mean(weight, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'variety'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 3\n# Groups:   variety [3]\n   variety   method     weight_avg\n   <chr>     <chr>           <dbl>\n 1 Costanera aeroponic        40.2\n 2 Costanera bed              87.5\n 3 Costanera hydroponic       25.1\n 4 Costanera pot             141. \n 5 Mariva    aeroponic        95.4\n 6 Mariva    bed              96.8\n 7 Mariva    hydroponic       14.3\n 8 Mariva    pot              92.2\n 9 Unica     aeroponic        88.5\n10 Unica     bed              69.1\n11 Unica     hydroponic       26.3\n12 Unica     pot              94.6\n```\n\n\n:::\n:::\n\n\n\n\nBsp.: Mittelwert und Standardabweichung von Gewicht je Sorte und Methode\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% group_by(variety, method) %>% \n  summarise(weight_avg=mean(weight, na.rm = TRUE),\n            weight_sd=sd(weight, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'variety'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n# Groups:   variety [3]\n   variety   method     weight_avg weight_sd\n   <chr>     <chr>           <dbl>     <dbl>\n 1 Costanera aeroponic        40.2     16.6 \n 2 Costanera bed              87.5     32.6 \n 3 Costanera hydroponic       25.1      8.17\n 4 Costanera pot             141.      22.2 \n 5 Mariva    aeroponic        95.4     54.8 \n 6 Mariva    bed              96.8     54.8 \n 7 Mariva    hydroponic       14.3      9.34\n 8 Mariva    pot              92.2     27.4 \n 9 Unica     aeroponic        88.5     70.8 \n10 Unica     bed              69.1     36.4 \n11 Unica     hydroponic       26.3     14.1 \n12 Unica     pot              94.6     60.3 \n```\n\n\n:::\n:::\n\n\n\n\nHier ein Code für eine Übersichtstabelle zur Beschreibung der Daten:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\npot %>% summarise(across(where(is.numeric), .fns = \n                     list(min = min,\n                          median = median,\n                          mean = mean,\n                          stdev = sd,\n                          q25 = ~quantile(., 0.25),\n                          q75 = ~quantile(., 0.75),\n                          max = max, \n                          n=length))) %>%\n  pivot_longer(everything(), names_sep='_', names_to=c('variable', '.value'))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 9\n  variable    min median   mean  stdev   q25   q75   max     n\n  <chr>     <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <int>\n1 plant         1    5    5.49   2.87    3     8     10    478\n2 tubers        0    4    4.72   2.28    3     6     13    478\n3 weight        0   61   72.8   53.6    26.1 109.   323.   478\n4 infection     0    0    0.335  0.472   0     1      1    478\n5 humidity      0   38.1 38.4   14.2    28.5  48.5   80    478\n```\n\n\n:::\n:::\n\n\n\n\nund hier nur für `tubers` und `weight`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% summarise(across(c(\"tubers\", \"weight\"), .fns = \n                     list(min = min,\n                          median = median,\n                          mean = mean,\n                          stdev = sd,\n                          q25 = ~quantile(., 0.25),\n                          q75 = ~quantile(., 0.75),\n                          max = max, \n                          n=length))) %>%\n  pivot_longer(everything(), names_sep='_', names_to=c('variable', '.value'))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 9\n  variable   min median  mean stdev   q25   q75   max     n\n  <chr>    <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <int>\n1 tubers       0      4  4.72  2.28   3      6    13    478\n2 weight       0     61 72.8  53.6   26.1  109.  323.   478\n```\n\n\n:::\n:::\n\n\n\n\nbzw. ohne `plant`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>% \n  select(!plant)%>% \n  summarise(across(where(is.numeric), .fns = \n                     list(min = min,\n                          median = median,\n                          mean = mean,\n                          stdev = sd,\n                          q25 = ~quantile(., 0.25),\n                          q75 = ~quantile(., 0.75),\n                          max = max, \n                          n=length))) %>%\n  pivot_longer(everything(), names_sep='_', names_to=c('variable', '.value'))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 9\n  variable    min median   mean  stdev   q25   q75   max     n\n  <chr>     <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <int>\n1 tubers        0    4    4.72   2.28    3     6     13    478\n2 weight        0   61   72.8   53.6    26.1 109.   323.   478\n3 infection     0    0    0.335  0.472   0     1      1    478\n4 humidity      0   38.1 38.4   14.2    28.5  48.5   80    478\n```\n\n\n:::\n:::\n\n\n\n\nfür unterschiedliche Methoden:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npot %>%  group_by(method) %>%\n  summarise(across(c(\"tubers\", \"weight\"), .fns = \n                     list(min = min,\n                          median = median,\n                          mean = mean,\n                          stdev = sd,\n                          q25 = ~quantile(., 0.25),\n                          q75 = ~quantile(., 0.75),\n                          max = max, \n                          n=length))) %>%\n  pivot_longer(cols = -method,  names_sep='_', names_to=c('variable', '.value')) %>% \n  arrange(variable)%>% \n  relocate(variable)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 10\n  variable method       min median   mean stdev   q25   q75   max     n\n  <chr>    <chr>      <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <int>\n1 tubers   aeroponic   0       5     4.76  2.29  3.75   6    13     120\n2 tubers   bed         1       5     5.55  2.37  4      7    13     120\n3 tubers   hydroponic  1       3     3.15  1.67  2      4     8     118\n4 tubers   pot         2       5     5.4   1.89  4      7    10     120\n5 weight   aeroponic   0      62.1  74.7  57.7  36.2   99.2 323.    120\n6 weight   bed        13.2    79.6  84.5  43.6  50.3  118.  227.    120\n7 weight   hydroponic  2.95   20.0  21.8  12.1  14.1   25.4  58.7   118\n8 weight   pot        11.3   111.  109.   45.9  72.7  143.  248.    120\n```\n\n\n:::\n:::\n\n\n\n\n\n## Übung 2.2.\nDie Körpergröße, Schuhgröße, Geschlecht und Augenfarbe von Kursteilnehmer wurde ermittelt. Importiere bitte die Daten [Kursteilnehmer.xlsx](https://github.com/DoreenGabriel/Kurs/blob/main/Themen/03/Kursteilnehmer.xlsx){target=\"_blank\"} in R  und benenne den data.frame mit `md`. \n\n::: {.callout-tip collapse=\"true\"}\n### Daten einlesen und prüfen\nDer Datensatz hat in der ersten Zeile eine detaillierte und in der zweiter Zeile die kurze Variablenbezeichnung. Daher lese ich die Daten mit dem Argument `startRow = 2` erst ab der zweiten Zeile ein. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nmd<-read.xlsx(\"Kursteilnehmer.xlsx\", sheet=1, startRow = 2)\nstr(md)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t72 obs. of  5 variables:\n $ Name: chr  \"Colton\" \"Kyle\" \"Brandon\" \"Cory\" ...\n $ KG  : num  181 183 186 184 172 186 183 197 180 184 ...\n $ SG  : num  42 44 42 45 43 43 42 45 43 43 ...\n $ AF  : chr  \"braun\" \"braun\" \"braun\" \"blau\" ...\n $ G   : chr  \"m\" \"m\" \"m\" \"m\" ...\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n+ Nutze die Funktion `summary(md)`, um die Daten zu beschreiben.\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(md)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Name                 KG              SG             AF           \n Length:72          Min.   :150.0   Min.   :35.00   Length:72         \n Class :character   1st Qu.:167.0   1st Qu.:38.00   Class :character  \n Mode  :character   Median :172.0   Median :40.00   Mode  :character  \n                    Mean   :173.2   Mean   :40.61                     \n                    3rd Qu.:180.0   3rd Qu.:43.00                     \n                    Max.   :200.0   Max.   :48.00                     \n      G            \n Length:72         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ Ermittele die Anzahl Frauen und Männer für jede Augenfarbe.\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd %>% count(AF, G) %>% \n  mutate(prop = prop.table(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     AF G  n       prop\n1  blau m 16 0.22222222\n2  blau w 12 0.16666667\n3 braun m 12 0.16666667\n4 braun w 20 0.27777778\n5 gruen m  4 0.05555556\n6 gruen w  8 0.11111111\n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ Berechne die mittlere Körpergröße für Männer und Frauen.\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd %>% group_by(G) %>% \n  summarise(KG_avg=mean(KG, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  G     KG_avg\n  <chr>  <dbl>\n1 m       181.\n2 w       167.\n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ Berechne den Quotienten aus Körpergröße und Schuhgröße für jeden Teilnehmer und füge diesen in den data.frame ein.\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd1=md %>% \n  mutate(Q=KG/SG)\nmd1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Name  KG SG    AF G        Q\n1         Colton 181 42 braun m 4.309524\n2           Kyle 183 44 braun m 4.159091\n3        Brandon 186 42 braun m 4.428571\n4           Cory 184 45  blau m 4.088889\n5          Heath 172 43  blau m 4.000000\n6          Jesse 186 43  blau m 4.325581\n7         Daniel 183 42 braun m 4.357143\n8         Bradin 197 45 braun m 4.377778\n9          David 180 43  blau m 4.186047\n10          Kyle 184 43 braun m 4.279070\n11       Brandon 189 48  blau m 3.937500\n12          Luke 177 44  blau m 4.022727\n13       Cameron 181 43 braun m 4.209302\n14        Justin 160 38 gruen m 4.210526\n15 Jackson Payne 176 42 braun m 4.190476\n16          Cole 180 43  blau m 4.186047\n17         Riley 184 44 gruen m 4.181818\n18         Lance 173 40  blau m 4.325000\n19         Nakai 178 43 braun m 4.139535\n20       Garrett 182 43 braun m 4.232558\n21       Braxton 180 44  blau m 4.090909\n22          Noah 200 45  blau m 4.444444\n23        Brolon 178 44 braun m 4.045455\n24          Mark 183 43  blau m 4.255814\n25        George 178 44  blau m 4.045455\n26        Camron 183 44  blau m 4.159091\n27        Bryson 180 41 braun m 4.390244\n28      Benjamin 192 43  blau m 4.465116\n29          Drew 178 41  blau m 4.341463\n30         Brian 163 42 gruen m 3.880952\n31          Kyle 173 42  blau m 4.119048\n32         Jacob 178 42 gruen m 4.238095\n33         Paige 177 40 braun w 4.425000\n34       Allison 170 41 gruen w 4.146341\n35       Janelle 167 39  blau w 4.282051\n36        Ashlie 163 39 braun w 4.179487\n37       Kathryn 170 37  blau w 4.594595\n38        Jordan 150 36  blau w 4.166667\n39         Kiana 152 35  blau w 4.342857\n40     Kimberlyn 164 40  blau w 4.100000\n41         Sydne 165 38 braun w 4.342105\n42       Jessica 170 38 braun w 4.473684\n43        Morgan 173 41 gruen w 4.219512\n44         Janie 167 39  blau w 4.282051\n45        Soraya 170 39 gruen w 4.358974\n46         Grace 168 39 braun w 4.307692\n47      Danielle 167 39 braun w 4.282051\n48     Elizabeth 163 37 braun w 4.405405\n49       Kaitlyn 172 38 gruen w 4.526316\n50      Bethanie 167 39 braun w 4.282051\n51        Kelsey 164 38  blau w 4.315789\n52         Dixie 170 39 braun w 4.358974\n53      Brynelle 165 37 gruen w 4.459459\n54       Andreah 162 38 braun w 4.263158\n55      Ashleigh 170 40 braun w 4.250000\n56       Kellcie 180 39  blau w 4.615385\n57        Maggie 168 38  blau w 4.421053\n58       Cassidy 157 38  blau w 4.131579\n59       Mallory 160 38 gruen w 4.210526\n60       Lindsay 168 38 braun w 4.421053\n61          Erin 162 39 braun w 4.153846\n62          Erin 160 38 gruen w 4.210526\n63         Hanna 172 41 braun w 4.195122\n64         Traci 175 41 braun w 4.268293\n65        Hannah 176 39 braun w 4.512821\n66    Mattielien 154 38  blau w 4.052632\n67       Felicia 172 40 braun w 4.300000\n68       Carissa 170 40  blau w 4.250000\n69      Danielle 164 37 gruen w 4.432432\n70      Kaytlynn 186 42 braun w 4.428571\n71        Lauren 168 40 braun w 4.200000\n72        Jenine 168 37 braun w 4.540541\n```\n\n\n:::\n:::\n\n\n\n:::\n\n+ Exportiere die Daten z.B. mit `write.xlsx()`.\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.xlsx(md1, \"KT_export.xlsx\", overwrite = TRUE)\n```\n:::\n\n\n\n:::\n\n\nZusatzaufgabe\n\n+ Exportiere sowohl die Daten als auch eine Summary Statistics der Daten in einem xlsx-file mit zwei Tabellenblätter.\n\n::: {.callout-tip collapse=\"true\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmd.sum=md %>%  group_by(G) %>%\n  summarise(across(c(\"KG\", \"SG\"), .fns = \n                     list(min = min,\n                          median = median,\n                          mean = mean,\n                          stdev = sd,\n                          q25 = ~quantile(., 0.25),\n                          q75 = ~quantile(., 0.75),\n                          max = max, \n                          n=length))) %>%\n  pivot_longer(cols = -G,  names_sep='_', names_to=c('X', '.value')) %>% \n  arrange(X)%>% \n  relocate(X)\nmd.sum\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 10\n  X     G       min median  mean stdev   q25   q75   max     n\n  <chr> <chr> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <int>\n1 KG    m       160   180. 181.   7.95  178    184   200    32\n2 KG    w       150   168  167.   7.07  164.   170   186    40\n3 SG    m        38    43   43.0  1.73   42     44    48    32\n4 SG    w        35    39   38.7  1.47   38     40    42    40\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwb <- createWorkbook()\naddWorksheet(wb, sheetName = \"KT\")\nwriteData(wb, \"KT\", md1) \naddWorksheet(wb, sheetName = \"summary statistics\")\nwriteData(wb, \"summary statistics\", md.sum) \nsaveWorkbook(wb, file = \"KT_export1.xlsx\", overwrite = TRUE)\n```\n:::\n\n\n\n:::\n\n\n",
    "supporting": [
      "02_DeskriptiveStats_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}